plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.android.gms.oss-licenses-plugin'
}

apply from: rootProject.file("android_common.gradle")

android {
    defaultConfig {
        applicationId "com.example.hackernewschecker"
        versionName "1.1"
        versionCode generateVersionCode(versionName)
    }

    buildTypes {
        // debug 版の設定を引き継ぎつつ、Proguard を有効にする
        check {
            initWith debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".check"
        }

        release {
            // 公開するアプリなので、Release 用の設定（keystore）は行わない
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // ソースディレクトリを java から kotlin に変更する
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    // ViewBinding を有効化
    android.buildFeatures.viewBinding = true
}

dependencies {
    // Module
    implementation project(":usecase")
    implementation project(":repository")

    // base
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    // Layout
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // dagger2
    def dagger_version = '2.29.1'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // coroutine
    def coroutine_version = '1.3.9'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // okHttp3
    def okhttp_version = '4.9.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Retrofit
    def retrofit_ver = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_ver"

    // Moshi
    def moshi_version = "1.11.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // OSS License
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
}

// versionName から versionCode を作成する
static def generateVersionCode(String versionName) {
    def versionArray = versionName.split("\\.")
    return versionArray[0].toInteger() * 100 + versionArray[1].toInteger()
}